<launch>
  <arg name="gui" value="true"/>
  <arg name="rviz" value="true"/>
  <!-- TD3_i_map for I shaped map or TD3.world for our map -->
  <arg name="world_name" value="$(find multi_robot_scenario)/worlds/TD3.world"/>
    <!-- Gazebo  -->
    <include file="$(find multi_robot_scenario)/launch/empty_world.launch">
      <arg name="gui" value="$(arg gui)" />
      <arg name="world_name" value="$(arg world_name)" />
      <arg name="paused" value="false"/>
    </include>

  <arg name="robot_name" default="drone" />
  <arg name="node_start_delay" default="1.0" /> 
  <arg name="robot_position" default="-x -2.0 -y 2.0 -z 0.01 -R 0 -P 0 -Y -1.5708" />


  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find multi_robot_scenario)/xacro/drone/drone.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
      launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' " 
      args="-urdf -model $(arg robot_name) -param robot_description $(arg robot_position) "/>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0"/>
    <!--<param name="tf_prefix" type="string" value="$(arg robot_name)"/>-->
  </node>

<node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
    <param name="publish_frequency" type="double" value="30.0"/>
</node>

</launch>
